name: ðŸ”„ Update JSON and groovy scenarios for RC testing

on:
  workflow_dispatch:
    inputs:
      scenario_id:
        description: 'Unique Scenario ID'
        required: true
      scenario_date:
        description: 'Date for scenario to be updated. Unique identifier of scenario'
        required: true
      scenario_data:
        description: 'JSON representation of RC testing scenario'
        required: true

env:
  SCENARIO_ID: ${{ github.event.inputs.scenario_id }}
  SCENARIO_DATE: ${{ fromJson(github.event.inputs.scenario_data).date }}
  SCENARIO_DATA: '${{ github.event.inputs.scenario_data }}'

jobs:
  update-scenario:
    runs-on: "ubuntu-latest"

    permissions:
      contents: write
      pull-requests: write

    concurrency:
      group: "crud_rc_scenarios"
      cancel-in-progress: false

    steps:
      - name: Install git
        run: sudo apt-get update && sudo apt-get install -y git

      - name: Load repository
        uses: actions/checkout@v4

      - name: Setup Github Action user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements_generation.txt


      - name: Delete old JSON and groovy scenarios for $SCENARIO_ID
        run: |
          find json_scenarios/ -type f -name "$SCENARIO_ID.json" -delete
          find scenarios/ -type f -name "$SCENARIO_ID.groovy" -delete

      - name: Save JSON scenario for $SCENARIO_DATE/$SCENARIO_ID
        run: |
          mkdir -p json_scenarios/$SCENARIO_DATE
          echo '${{ github.event.inputs.scenario_data }}' > json_scenarios/$SCENARIO_DATE/$SCENARIO_ID.json

      - name: Generate groovy file from scenario representation in JSON format
        run: |
          python generate_groovy_scenario.py --json_scenario_path=json_scenarios/$SCENARIO_DATE/$SCENARIO_ID.json

      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add json_scenarios scenarios
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update scenario for $SCENARIO_DATE/$SCENARIO_ID"
            git pull --rebase
            git push origin HEAD:master
          fi
